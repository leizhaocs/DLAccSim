 0 =  0  1  2  3  4  5  6  7  8 -1 -1 -1 -1 -1
 0 =  1  2  3  4  5  6  7  8  9 -1 -1 -1 -1 -1
 1 =  0  1  2  3  4  5  6  7  8 -1 -1 -1 -1 -1
 1 =  1  2  3  4  5  6  7  8  9 -1 -1 -1 -1 -1
 0 =  0  1  2  3  4  5  6  7  8 -1 -1 -1 -1 -1
 0 =  1  2  3  4  5  6  7  8  9 -1 -1 -1 -1 -1
 1 =  0  1  2  3  4  5  6  7  8 -1 -1 -1 -1 -1
 1 =  1  2  3  4  5  6  7  8  9 -1 -1 -1 -1 -1
-1 = -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 = -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 = -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 = -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1

Only the first 12 lines matters to configure the accelerator, all the content afterwards will be treated as comments.

This is an example to show how the ifmap NOC are configured.

The corresponding example input and filter data are defined in data.txt.
The input has a dimension of (N,C,H,W)=(4,4,10,10).
The filter has a dimemsion of (M,C,R,S) = (4,4,2,2).

The first number before the = sign of each line is called the row ID.
The numbers after the = sign is called the column IDs.
The PEs with the same row ID and column ID will receive the same input data at any time.
Each different column ID actually indicates a different row in the input.
Each different row ID actually indicates a different channel and input.

The column ID is easy to understand, what needs more explanation is the row ID.
Each different row ID is determined by the combination of channel and input.
For example, because each PE is configured to store data from 2 different channels and 2 different inputs,
row ID 0 indicates this row of PEs will store the first 2 channels (C=0,1) of the the first 2 inputs (N=0,1).
row ID 1 indicates this row of PEs will store the second 2 channels (C=2,3) of the the first 2 inputs (N=0,1).
row ID 2 indicates this row of PEs will store the first 2 channels (C=0,1) of the the second 2 inputs (N=2,3).
row ID 3 indicates this row of PEs will store the second 2 channels (C=2,3) of the the second 2 inputs (N=2,3).

From the above example we can see that rows 5-6 are a replicate of rows 1-4.
The reason why we need these two replicates is because of the filters.
After understand map_filter.txt, this may be more clear.
In the filter NOC, we need 8 rows to store all the filters (rows 1-4 store the first 2 filters, rows 5-6 stores the second 2 filters).
So, we actually need another 8 rows to store the next 2 inputs.
However, there are not enough rows, so in this example we only calculate the first inputs.
